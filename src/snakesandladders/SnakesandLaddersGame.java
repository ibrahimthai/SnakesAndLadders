/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SnakesandLaddersGame.java
 *
 * 
 */

package snakesandladders;

import java.awt.event.*;
import java.awt.*;

/**
 *
 * @author Ibrahim
 */
public class SnakesandLaddersGame extends javax.swing.JFrame{

    int NumOfPlayers = 0;

    /** Creates new form SnakesandLaddersGame */
    public SnakesandLaddersGame(int Choice) {
        NumOfPlayers = Choice;
        initComponents();
    }

    public void close(){

WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        p1Ctrl = new javax.swing.JLabel();
        p2Ctrl = new javax.swing.JLabel();
        gameStatus = new javax.swing.JTextField();
        rollValue = new javax.swing.JTextField();
        p2rollButton = new javax.swing.JButton();
        p1rollButton = new javax.swing.JButton();
        menuButton = new javax.swing.JButton();
        retryButton = new javax.swing.JButton();
        boardImage = new javax.swing.JLabel();
        backgroundImage = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(snakesandladders.SnakesandLaddersApp.class).getContext().getResourceMap(SnakesandLaddersGame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 996, 640));

        mainPanel.setMaximumSize(new java.awt.Dimension(1920, 1200));
        mainPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(996, 640));
        mainPanel.setLayout(null);

        p1Ctrl.setFont(resourceMap.getFont("p1Ctrl.font")); // NOI18N
        p1Ctrl.setIcon(resourceMap.getIcon("p1Ctrl.icon")); // NOI18N
        p1Ctrl.setText(resourceMap.getString("p1Ctrl.text")); // NOI18N
        p1Ctrl.setName("p1Ctrl"); // NOI18N
        p1Ctrl.setRequestFocusEnabled(false);
        mainPanel.add(p1Ctrl);
        p1Ctrl.setBounds(14, 498, 25, 25);

        p2Ctrl.setFont(resourceMap.getFont("p2Ctrl.font")); // NOI18N
        p2Ctrl.setIcon(resourceMap.getIcon("p2Ctrl.icon")); // NOI18N
        p2Ctrl.setText(resourceMap.getString("p2Ctrl.text")); // NOI18N
        p2Ctrl.setFocusable(false);
        p2Ctrl.setName("p2Ctrl"); // NOI18N
        p2Ctrl.setRequestFocusEnabled(false);
        mainPanel.add(p2Ctrl);
        p2Ctrl.setBounds(37, 521, 25, 25);

        gameStatus.setBackground(resourceMap.getColor("gameStatus.background")); // NOI18N
        gameStatus.setEditable(false);
        gameStatus.setFont(resourceMap.getFont("gameStatus.font")); // NOI18N
        gameStatus.setForeground(resourceMap.getColor("gameStatus.foreground")); // NOI18N
        gameStatus.setText(resourceMap.getString("gameStatus.text")); // NOI18N
        gameStatus.setName("gameStatus"); // NOI18N
        mainPanel.add(gameStatus);
        gameStatus.setBounds(70, 570, 430, 30);

        rollValue.setBackground(resourceMap.getColor("rollValue.background")); // NOI18N
        rollValue.setEditable(false);
        rollValue.setFont(resourceMap.getFont("rollValue.font")); // NOI18N
        rollValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rollValue.setText(resourceMap.getString("rollValue.text")); // NOI18N
        rollValue.setName("rollValue"); // NOI18N
        mainPanel.add(rollValue);
        rollValue.setBounds(720, 260, 60, 60);

        p2rollButton.setText(resourceMap.getString("p2rollButton.text")); // NOI18N
        p2rollButton.setEnabled(false);
        p2rollButton.setName("p2rollButton"); // NOI18N
        p2rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2rollButtonActionPerformed(evt);
            }
        });
        mainPanel.add(p2rollButton);
        p2rollButton.setBounds(770, 380, 100, 60);

        p1rollButton.setText(resourceMap.getString("p1rollButton.text")); // NOI18N
        p1rollButton.setName("p1rollButton"); // NOI18N
        p1rollButton.setVerifyInputWhenFocusTarget(false);
        p1rollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1rollButtonActionPerformed(evt);
            }
        });
        mainPanel.add(p1rollButton);
        p1rollButton.setBounds(640, 380, 100, 60);

        menuButton.setText(resourceMap.getString("menuButton.text")); // NOI18N
        menuButton.setName("menuButton"); // NOI18N
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });
        mainPanel.add(menuButton);
        menuButton.setBounds(800, 540, 97, 23);

        retryButton.setText(resourceMap.getString("retryButton.text")); // NOI18N
        retryButton.setName("retryButton"); // NOI18N
        retryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retryButtonActionPerformed(evt);
            }
        });
        mainPanel.add(retryButton);
        retryButton.setBounds(670, 540, 100, 23);

        boardImage.setIcon(resourceMap.getIcon("boardImage.icon")); // NOI18N
        boardImage.setText(resourceMap.getString("boardImage.text")); // NOI18N
        boardImage.setName("boardImage"); // NOI18N
        mainPanel.add(boardImage);
        boardImage.setBounds(10, 10, 540, 540);

        backgroundImage.setIcon(resourceMap.getIcon("backgroundImage.icon")); // NOI18N
        backgroundImage.setText(resourceMap.getString("backgroundImage.text")); // NOI18N
        backgroundImage.setName("backgroundImage"); // NOI18N
        mainPanel.add(backgroundImage);
        backgroundImage.setBounds(0, 0, 1000, 620);

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(snakesandladders.SnakesandLaddersApp.class).getContext().getActionMap(SnakesandLaddersGame.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 996, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //record scores for each player
    int p1Score = 1, p2Score = 1;

    //setting location through x-coordinates for player 1
    int[] p1Board_x = {
        14, 68, 121, 174, 228, 281, 335, 388, 441, 495
    };
    //setting location through y-coordinates for player 1
    int[] p1Board_y = {
        498, 445, 391, 338, 284, 231, 176, 123, 69, 14
    };

    //setting location through x-coordinates for player 2
    int[] p2Board_x = {
        37, 91, 144, 197, 251, 304, 357, 411, 464, 518
    };
    //setting location through y-coordinates for player 2
    int[] p2Board_y = {
        521, 468, 414, 361, 306, 252, 199, 145, 91, 38
    };

    //coordinates for player 1 and 2
    int p1_x = p1Board_x[0], p1_y = p1Board_y[0];
    int p2_x = p2Board_x[0], p2_y = p2Board_y[0];
    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        
        retryButton.doClick();
        close();
    }//GEN-LAST:event_menuButtonActionPerformed

    private void retryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retryButtonActionPerformed
        //resets player 1 back to Start, for new game
        p1_x = p1Board_x[0];
        p1_y = p1Board_y[0];
        p1Ctrl.setLocation(p1_x,p1_y);
        p1Score = 1;
        
        //resets player 2 back to Start, for new game
        p2_x = p2Board_x[0];
        p2_y = p2Board_y[0];
        p2Ctrl.setLocation(p2_x,p2_y);
        p2Score = 1;

        //resets dice roll
        rollValue.setText("");

        //resets buttons and status
        p1rollButton.setEnabled(true);
        p2rollButton.setEnabled(false);
        p1rollButton.requestFocusInWindow();
        gameStatus.setText("player 1's Starts");

        //added delay to look like the button is busy
         try{
               Thread.sleep(500);
           } catch (InterruptedException e) {}
    }//GEN-LAST:event_retryButtonActionPerformed

    private void p2rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2rollButtonActionPerformed
       int randomValue = 0, xIndex = 0, yIndex = 0 ;
       int i;

       //disables button for player 2's turn
       p2rollButton.setEnabled(false);

       // generates dice value
       for (i = 0; i < 10; i++) {
           randomValue = (int) (Math.floor(Math.random()*6 + 1));
           rollValue.setText(Integer.toString(randomValue));
           
       }

       //avoids getting more than square 100
       if (p2Score + randomValue > 100) randomValue = 0;
       
       //adds the total score from the dice value
       p2Score += randomValue;

       //generates x and y coordinates
       yIndex = (int) (p2Score - 1) / 10;
       xIndex = (int) (p2Score - 1) % 10;

       //determines location from array
       p2_x = p2Board_x[xIndex];
       p2_y = p2Board_y[yIndex];

       //sets score (or square location) for player 2
       p2Ctrl.setLocation(p2_x,p2_y);

       //Check to see if we won
       if (p2Score == 100){
           //We won so update status
           gameStatus.setText("player 2 Wins!!!");
       }
       //Check to see if the other player needs a turn
       else if (p1Score < 100) {
           
           p1rollButton.setEnabled(true);
           p1rollButton.requestFocusInWindow();
           
           //updates status
           gameStatus.setText("It's player 1's turn");
       }
    
       // player 2 cases for landing on ladders
    switch (p2Score){
        case 3:
            p2Score = 51;
            gameStatus.setText("Player 2 landed on the ladder, going up to 51");
            break;
        case 6:
            p2Score = 27;
            gameStatus.setText("Player 2 landed on the ladder, going up to 27");
            break;
        case 20:
            p2Score = 70;
            gameStatus.setText("Player 2 landed on the ladder, going up to 70");
            break;
        case 36:
            p2Score = 55;
            gameStatus.setText("Player 2 landed on the ladder, going up to 55");
            break;
        case 63:
            p2Score = 95;
            gameStatus.setText("Player 2 landed on the ladder, going up to 95");
            break;
        case 68:
            p2Score = 98;
            gameStatus.setText("Player 2 landed on the ladder, going up to 98");
            break;
    // player 2 cases for landing on snakes
        case 25:
            p2Score = 5;
            gameStatus.setText("Player 2 landed on the snake, going down to 5");
            break;
        case 34:
            p2Score = 1;
            gameStatus.setText("Player 2 landed on the snake, going down to 1");
            break;
        case 47:
            p2Score = 19;
            gameStatus.setText("Player 2 landed on the snake, going down to 19");
            break;
        case 65:
            p2Score = 52;
            gameStatus.setText("Player 2 landed on the snake, going down to 52");
            break;
        case 87:
            p2Score = 57;
            gameStatus.setText("Player 2 landed on the snake, going down to 57");
            break;
        case 91:
            p2Score = 61;
            gameStatus.setText("Player 2 landed on the snake, going down to 61");
            break;
        case 99:
            p2Score = 69;
            gameStatus.setText("Player 2 landed on the snake, going down to 69");
    }

    //generates x and y coordinates
       yIndex = (int) (p2Score - 1) / 10;
       xIndex = (int) (p2Score - 1) % 10;

       //determines location from array
       p2_x = p2Board_x[xIndex];
       p2_y = p2Board_y[yIndex];

       //sets score (or square location) for player 2
       p2Ctrl.setLocation(p2_x,p2_y);
    }//GEN-LAST:event_p2rollButtonActionPerformed

    private void p1rollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1rollButtonActionPerformed
       int randomValue = 0, xIndex = 0, yIndex = 0 ;
       int i;

       //disables button for player 1's turn
       p1rollButton.setEnabled(false);

       // generates dice value, delay function included
       for (i = 0; i < 10; i++) {
           randomValue = (int) (Math.floor(Math.random()*6 + 1));
           rollValue.setText(Integer.toString(randomValue));

       }

       //avoids getting more than square 100
       if (p1Score + randomValue > 100) randomValue = 0;
       
       //adds the total score from the dice value
       p1Score += randomValue;

       //generates x and y coordinates
       yIndex = (int) (p1Score - 1) / 10;
       xIndex = (int) (p1Score - 1) % 10;
       
       //determines location from array
       p1_x = p1Board_x[xIndex];
       p1_y = p1Board_y[yIndex];

       //sets score (or square location) for player 1
       p1Ctrl.setLocation(p1_x,p1_y);

       //Check to see if we won
       if (p1Score == 100){
           //We won so update status
           gameStatus.setText("player 1 Wins!!!");
       }
       //Check to see if the other player needs a turn
       else if ((p2Score < 100) && (NumOfPlayers == 2)){
           p2rollButton.setEnabled(true);
           p2rollButton.requestFocusInWindow();
           System.out.println(Integer.toString(NumOfPlayers));
           //updates status
           gameStatus.setText("It's player 2's turn");
       }
       else if ((p2Score < 100) && (NumOfPlayers == 1)){
           p2rollButton.setEnabled(true);
           p2rollButton.doClick();
           System.out.println(Integer.toString(NumOfPlayers));
       }
        
       // player 1 cases for landing on ladders
    switch (p1Score){
        case 3:
            p1Score = 51;
            gameStatus.setText("Player 1 landed on the ladder, going up to 51");
            break;
        case 6:
            p1Score = 27;
            gameStatus.setText("Player 1 landed on the ladder, going up to 27");
            break;
        case 20:
            p1Score = 70;
            gameStatus.setText("Player 1 landed on the ladder, going up to 70");
            break;
        case 36:
            p1Score = 55;
            gameStatus.setText("Player 1 landed on the ladder, going up to 55");
            break;
        case 63:
            p1Score = 95;
            gameStatus.setText("Player 1 landed on the ladder, going up to 95");
            break;
        case 68:
            p1Score = 98;
            gameStatus.setText("Player 1 landed on the ladder, going up to 98");
            break;
    // player 1 cases for landing on snakes
        case 25:
            p1Score = 5;
            gameStatus.setText("Player 1 landed on the snake, going down to 5");
            break;
        case 34:
            p1Score = 1;
            gameStatus.setText("Player 1 landed on the snake, going down to 1");
            break;
        case 47:
            p1Score = 19;
            gameStatus.setText("Player 1 landed on the snake, going down to 19");
            break;
        case 65:
            p1Score = 52;
            gameStatus.setText("Player 1 landed on the snake, going down to 52");
            break;
        case 87:
            p1Score = 57;
            gameStatus.setText("Player 1 landed on the snake, going down to 57");
            break;
        case 91:
            p1Score = 61;
            gameStatus.setText("Player 1 landed on the snake, going down to 61");
            break;
        case 99:
            p1Score = 69;
            gameStatus.setText("Player 1 landed on the snake, going down to 69");
    }

       //generates x and y coordinates
       yIndex = (int) (p1Score - 1) / 10;
       xIndex = (int) (p1Score - 1) % 10;

       //determines location from array
       p1_x = p1Board_x[xIndex];
       p1_y = p1Board_y[yIndex];

       //sets score (or square location) for player 1
       p1Ctrl.setLocation(p1_x,p1_y);
    }//GEN-LAST:event_p1rollButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JLabel boardImage;
    private javax.swing.JTextField gameStatus;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton menuButton;
    private javax.swing.JLabel p1Ctrl;
    private javax.swing.JButton p1rollButton;
    private javax.swing.JLabel p2Ctrl;
    private javax.swing.JButton p2rollButton;
    private javax.swing.JButton retryButton;
    private javax.swing.JTextField rollValue;
    // End of variables declaration//GEN-END:variables

}
